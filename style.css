body {
  margin: 0;
}

/* When two or more selectors target the same element and have declarations for the same property it creates a 
declaration conflict. */

/* To determine which will win out the browser utilizes a set of rules (the cascade), this keeps results predictable */

/* The rules are:
1. style orignin: whichever has the highest-priority origin wins, else...
* there are three style origin types. author styles, user styles, and user-agent styles. 
Author styles are the styles written by the developer. user styles are added into the document by a user through the browser
and user-agent styles are the default styles applied by the browser. 
* The priority of origins is as follows... author, user, user-agent
2. inline-styles: if one is an inline style and the other isnt it wins, else...
3. layer: whichever is defined in highest priority scope wins, else...
4. specificity: whichever has selector with highest specificity wins, else...
5. scope proximity: whichever has highest priority scope wins, else...
6. whichever comes last in source order wins.  */
h1 {
  /* important makes a declaration a higher priority origin. However, user-agent important styles override, user important,
    whereas user important overrides inline important, whereas inline important overrides author style important. The only thing
    that overrides user-agent important is the transition property. */
  font-family: serif !important;
}
#page-title {
  font-family: sans-serif;
}
.title {
  font-family: monospace;
}

/* Overrides user-agent styles */
#main-nav {
  padding: 0;
  list-style: none;
}

#main-nav li {
  display: inline-block;
  cursor: pointer;
}

#main-nav a {
  text-decoration: none;
  color: white;
  padding: 0.5em 1.5em;
  background-color: teal;
}

/* This wont override the above declaration because the selector is less specific. */
/* Any number of ID's overrides any number of classes which overrides any number of type selectors */
/* pseudo-classes and attribute selectors have the same specificiy as classe. pseudo elements have the same as
   type selectors. universal selector and combinators (+, >, ~) have no specificity.  */
.featured {
  background-color: green;
}
